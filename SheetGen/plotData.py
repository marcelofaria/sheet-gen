import matplotlib.pyplot as plt

allnumbers = (
86.15384615384616 ,
0.0024385659230407686 ,
96.92307692307693 ,
0.010247817179536194 ,
107.69230769230771 ,
0.007364707411912468 ,
118.46153846153847 ,
0.003957584991708921 ,
129.23076923076923 ,
0.007379834504372635 ,
140.0 ,
0.003011834497965532 ,
150.76923076923077 ,
0.009202466067308838 ,
161.53846153846155 ,
0.006581138295706046 ,
172.30769230769232 ,
0.006072266638746203 ,
183.0769230769231 ,
0.012771933528699908 ,
193.84615384615387 ,
0.0065487668188708645 ,
204.61538461538464 ,
0.00984172529836088 ,
215.38461538461542 ,
0.01075585317454674 ,
226.15384615384616 ,
0.011100692162925906 ,
236.92307692307693 ,
0.00891973350679874 ,
247.6923076923077 ,
0.0034684698487622897 ,
258.46153846153845 ,
0.019967942357549114 ,
269.2307692307692 ,
0.012827314268934837 ,
280.0 ,
0.009411112777828122 ,
290.7692307692308 ,
0.010806741847792225 ,
301.53846153846155 ,
0.022717919034727606 ,
312.3076923076923 ,
0.017977768249957386 ,
323.0769230769231 ,
0.004059013842459106 ,
333.84615384615387 ,
0.029167230720838697 ,
344.61538461538464 ,
0.0338113739878832 ,
355.3846153846154 ,
0.025573221930284527 ,
366.1538461538462 ,
0.009392518181515888 ,
376.92307692307696 ,
0.052476626164101176 ,
387.69230769230774 ,
0.06287202947383833 ,
398.4615384615385 ,
0.03797055880408271 ,
409.2307692307693 ,
0.04694595594262536 ,
420.00000000000006 ,
0.17373410962889482 ,
430.76923076923083 ,
0.2946188946415018 ,
441.53846153846155 ,
0.4317912927305963 ,
452.3076923076923 ,
0.1745995675351412 ,
463.0769230769231 ,
0.12782317177168898 ,
473.84615384615387 ,
0.0632431660881295 ,
484.61538461538464 ,
0.022164203456862406 ,
495.3846153846154 ,
0.04948599555606071 ,
506.1538461538462 ,
0.046992001916303705 ,
516.9230769230769 ,
0.023445752385295126 ,
527.6923076923077 ,
0.02737802630644402 ,
538.4615384615385 ,
0.029197624970511888 ,
549.2307692307693 ,
0.03205566022787667 ,
560.0 ,
0.027583717083123262 ,
570.7692307692308 ,
0.01567124735446208 ,
581.5384615384615 ,
0.019210371471649272 ,
592.3076923076924 ,
0.014741161397579547 ,
603.0769230769231 ,
0.016430585084397268 ,
613.8461538461539 ,
0.008157251893704358 ,
624.6153846153846 ,
0.02020238188518322 ,
635.3846153846155 ,
0.011510286468386742 ,
646.1538461538462 ,
0.004092074543526898 ,
656.923076923077 ,
0.01166631431219222 ,
667.6923076923077 ,
0.007744384762098424 ,
678.4615384615386 ,
0.008313502417243247 ,
689.2307692307693 ,
0.010034399933528731 ,
700.0 ,
0.0057460104600815 ,
710.7692307692308 ,
0.00811087103244846 ,
721.5384615384615 ,
0.009859842142980383 ,
732.3076923076924 ,
0.010415058686308229 ,
743.0769230769231 ,
0.014768036406217964 ,
753.8461538461539 ,
0.014470801307402891 ,
764.6153846153846 ,
0.012788066549928388 ,
775.3846153846155 ,
0.014110019091044227 ,
786.1538461538462 ,
0.020674537263542285 ,
796.923076923077 ,
0.004446972134406974 ,
807.6923076923077 ,
0.005975883672384607 ,
818.4615384615386 ,
0.008466501582871187 ,
829.2307692307693 ,
0.012781974236802185 ,
840.0000000000001 ,
0.0005881709719535796 ,
850.7692307692308 ,
0.006832647022114946 ,
861.5384615384617 ,
0.009152498496742599 ,
872.3076923076924 ,
0.010381759910011121 ,
883.0769230769231 ,
0.006627422368504189 ,
893.8461538461539 ,
0.003975554157902769 ,
904.6153846153846 ,
0.005575908855739006 ,
915.3846153846155 ,
0.0048118275409687015 ,
926.1538461538462 ,
0.005222644816243259 ,
936.923076923077 ,
0.017626981508106043 ,
947.6923076923077 ,
0.008999774277551763 ,
958.4615384615386 ,
0.005643766194386692 ,
969.2307692307693 ,
0.013148978629789997 ,
980.0000000000001 ,
0.009572313144641109 ,
990.7692307692308 ,
0.008780100721198728 ,
1001.5384615384617 ,
0.012475614235675569 ,
1012.3076923076924 ,
0.011957508779197431 ,
1023.0769230769232 ,
0.003240468032767866 ,
1033.8461538461538 ,
0.0028830307226326425 ,
1044.6153846153848 ,
0.012295742015755005 ,
1055.3846153846155 ,
0.007817368143920438 ,
1066.1538461538462 ,
0.006722036612749942 ,
1076.923076923077 ,
0.0016522957489565626 ,
1087.6923076923078 ,
0.00875566003455832 ,
1098.4615384615386 ,
0.01694409399904133 ,
1109.2307692307693 ,
0.0075618502904377235 ,
1120.0 ,
0.00760561849176197 ,
1130.769230769231 ,
0.005732818588312075 ,
1141.5384615384617 ,
0.004799927330012069 ,
1152.3076923076924 ,
0.0015562026405546252 ,
1163.076923076923 ,
0.007720456413533566 ,
1173.846153846154 ,
0.00358412114296534 ,
1184.6153846153848 ,
0.01622254314433206 ,
1195.3846153846155 ,
0.012605770141746133 ,
1206.1538461538462 ,
0.013064457607150966 ,
1216.923076923077 ,
0.020430494373502812 ,
1227.6923076923078 ,
0.011465899258180081 ,
1238.4615384615386 ,
0.02089331882817357 ,
1249.2307692307693 ,
0.023670938575827822 ,
1260.0 ,
0.02483043069440017 ,
1270.769230769231 ,
0.008716534670106739 ,
1281.5384615384617 ,
0.020133192312841084 ,
1292.3076923076924 ,
0.05213219511025825 ,
1303.076923076923 ,
0.04513077288692555 ,
1313.846153846154 ,
0.11092379557522675 ,
1324.6153846153848 ,
0.2113859194498632 ,
1335.3846153846155 ,
0.05311387173268584 ,
1346.1538461538462 ,
0.007291308245192935 ,
1356.9230769230771 ,
0.011585489171100073 ,
1367.6923076923078 ,
0.015899894275376678 ,
1378.4615384615386 ,
0.003656827910464774 ,
1389.2307692307693 ,
0.007051532317407049 ,
1400.0 ,
0.01062793856166315 ,
1410.769230769231 ,
0.013016761777124443 ,
1421.5384615384617 ,
0.003539021622524329 ,
1432.3076923076924 ,
0.0036943866310904746 ,
1443.076923076923 ,
0.008470437179539147 ,
1453.846153846154 ,
0.004920896146393095 ,
1464.6153846153848 ,
0.008497340094197864 ,
1475.3846153846155 ,
0.011493965333025286 ,
1486.1538461538462 ,
0.0030459441341636633 ,
1496.9230769230771 ,
0.008640236327332303 ,
1507.6923076923078 ,
0.00954490385033137 ,
1518.4615384615386 ,
0.0049546711078810885 ,
)

#declarações de variáveis iniciais
splited = allnumbers

even = 0
x = 0

odd = 0
y = 1

#guarda em even os elementos pares da lista
while x < len(splited):
    even = str(even) + "," + str(splited[x])
    x = x + 2

splitedX = even.split(",")
#tira o primeiro item adicionado pela atribuição inicial
del splitedX[0]

#guarda em odd os elementos impares da lista
while y < len(splited):
    odd = str(odd) + "," + str(splited[y])
    y = y + 2

splitedY = odd.split(",")
#tira o primeiro item adicionado pela atribuição inicial
del splitedY[0]

'''
for j in splitedY:
    print(j)

for i in splitedX:
    print(i)
'''

#converte cada item do array de string pra float
splitedY = [float(y) for y in splitedY]
splitedX = [float(x) for x in splitedX]

maxY = 0
maxX = 0
i = 0

while i < len(splitedY):
    if splitedY[i] > maxY:
        maxY = splitedY[i]
        maxX = i
    i = i + 1

print(maxY, maxX)

print(splitedX[maxX])

plt.plot(splitedX, splitedY, '-', lw=2)
plt.plot(splitedX[maxX], maxY, 'ro', lw=2)
#plt.annotate('.', xy=(splitedX[maxX], maxY))
plt.show()

